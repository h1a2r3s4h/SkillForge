{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/harshitgangwar/Desktop/SkillForge/lib/inngest/client.js"],"sourcesContent":["import { Inngest } from \"inngest\";\n\n// Create a client to send and receive events\nexport const inngest = new Inngest({ id: \"my-app\" , name: \"SkillForge\" });"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,UAAU,IAAI,6JAAO,CAAC;IAAE,IAAI;IAAW,MAAM;AAAa","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/harshitgangwar/Desktop/SkillForge/lib/inngest/functions.js"],"sourcesContent":["// import { db } from \"@/lib/prisma\";\n// import { inngest } from \"./client\";\n// import { GoogleGenerativeAI } from \"@google/generative-ai\";\n\n// const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n// const model = genAI.getGenerativeModel({ model: \"gemini-2.5-flash\" });\n\n// export const generateIndustryInsights = inngest.createFunction(\n//   { name: \"Generate Industry Insights\" },\n//   { cron: \"0 0 * * 0\" }, // Run every Sunday at midnight\n//   async ({ event, step }) => {\n//     const industries = await step.run(\"Fetch industries\", async () => {\n//       return await db.industryInsight.findMany({\n//         select: { industry: true },\n//       });\n//     });\n\n//     for (const { industry } of industries) {\n//       const prompt = `\n//           Analyze the current state of the ${industry} industry and provide insights in ONLY the following JSON format:\n//     {\n//       \"salaryRanges\": [\n//         { \"role\": \"string\", \"min\": number, \"max\": number, \"median\": number, \"location\": \"string\" }\n//       ],\n//       \"growthRate\": number,\n//       \"demandLevel\": \"High\" | \"Medium\" | \"Low\",\n//       \"topSkills\": [\"skill1\", \"skill2\"],\n//       \"marketOutlook\": \"Positive\" | \"Neutral\" | \"Negative\",\n//       \"keyTrends\": [\"trend1\", \"trend2\"],\n//       \"recommendedSkills\": [\"skill1\", \"skill2\"]\n//     }\n//     IMPORTANT: Return ONLY the JSON. Include at least 5 roles and 5 skills/trends. No notes or markdown.\n//   `;\n\n//       const res = await step.ai.wrap(\n//         \"gemini\",\n//         async (p) => {\n//           return await model.generateContent(p);\n//         },\n//         prompt\n//       );\n\n//       const text = res.response.candidates[0].content.parts[0].text || \"\";\n//       const cleanedText = text.replace(/```(?:json)?\\n?/g, \"\").trim();\n\n//       const insights = JSON.parse(cleanedText);\n\n//       await step.run(`Update ${industry} insights`, async () => {\n//         await db.industryInsight.update({\n//           where: { industry },\n//           data: {\n//             ...insights,\n//             lastUpdated: new Date(),\n//             nextUpdate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n//           },\n//         });\n//       });\n//     }\n//   }\n// );\n\nimport { inngest } from \"./client\";\n\nexport const helloWorld = inngest.createFunction(\n  { id: \"hello-world\" },\n  { event: \"test/hello.world\" },\n  async ({ event, step }) => {\n    await step.sleep(\"wait-a-moment\", \"1s\");\n    return { message: `Hello ${event.data.email}!` };\n  }\n);\n"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,sCAAsC;AACtC,8DAA8D;AAE9D,oEAAoE;AACpE,yEAAyE;AAEzE,kEAAkE;AAClE,4CAA4C;AAC5C,2DAA2D;AAC3D,iCAAiC;AACjC,0EAA0E;AAC1E,mDAAmD;AACnD,sCAAsC;AACtC,YAAY;AACZ,UAAU;AAEV,+CAA+C;AAC/C,yBAAyB;AACzB,0HAA0H;AAC1H,QAAQ;AACR,0BAA0B;AAC1B,qGAAqG;AACrG,WAAW;AACX,8BAA8B;AAC9B,kDAAkD;AAClD,2CAA2C;AAC3C,8DAA8D;AAC9D,2CAA2C;AAC3C,kDAAkD;AAClD,QAAQ;AACR,2GAA2G;AAC3G,OAAO;AAEP,wCAAwC;AACxC,oBAAoB;AACpB,yBAAyB;AACzB,mDAAmD;AACnD,aAAa;AACb,iBAAiB;AACjB,WAAW;AAEX,6EAA6E;AAC7E,yEAAyE;AAEzE,kDAAkD;AAElD,oEAAoE;AACpE,4CAA4C;AAC5C,iCAAiC;AACjC,oBAAoB;AACpB,2BAA2B;AAC3B,uCAAuC;AACvC,0EAA0E;AAC1E,eAAe;AACf,cAAc;AACd,YAAY;AACZ,QAAQ;AACR,MAAM;AACN,KAAK;;;;;AAEL;;AAEO,MAAM,aAAa,qIAAO,CAAC,cAAc,CAC9C;IAAE,IAAI;AAAc,GACpB;IAAE,OAAO;AAAmB,GAC5B,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;IACpB,MAAM,KAAK,KAAK,CAAC,iBAAiB;IAClC,OAAO;QAAE,SAAS,CAAC,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAAC;AACjD","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/harshitgangwar/Desktop/SkillForge/app/api/inngest/route.js"],"sourcesContent":["import { serve } from \"inngest/next\";\nimport { inngest } from \"@/lib/inngest/client\";\nimport { helloWorld } from \"@/lib/inngest/functions\";\n// import { helloWorld } from \"@/lib/inngest/functions\"; // ðŸ‘ˆ import it\n\nexport const { GET, POST, PUT } = serve({\n  client: inngest,\n  functions: [\n    // Add functions here\n  ],\n});\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;;;;AAGO,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAA,0IAAK,EAAC;IACtC,QAAQ,qIAAO;IACf,WAAW,EAEV;AACH","debugId":null}}]
}